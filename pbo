import java.util.ArrayList;
import java.util.Scanner;

public class App {
    public static void main(String[] args) throws Exception {
        // Membuat instance Cashier untuk mengelola transaksi.
        Cashier cashier = new Cashier();
        Scanner scanner = new Scanner(System.in); // Membuat scanner untuk input pengguna.

        while (true) {
            // Menampilkan menu pilihan kepada pengguna.
            System.out.println("----------------------------------");
            System.out.println("|\tProgram Transaksi Kasir\t\t |");
            System.out.println("----------------------------------");
            System.out.println("1. Tambah Barang");
            System.out.println("2. Hapus Barang");
            System.out.println("3. Tampilkan Total dan Pembayaran");
            System.out.println("4. Keluar");
            System.out.println("----------------------------------");
            System.out.print("Pilih opsi: ");
            int choice = scanner.nextInt(); // Membaca pilihan pengguna.

            switch (choice) {
                case 1:
                    // Menambah barang ke dalam daftar belanja.
                    System.out.println("----------------------------------");
                    System.out.print("Masukkan kode barang: ");
                    String addCode = scanner.next(); // Membaca kode barang.
                    System.out.print("Masukkan nama barang: ");
                    String addName = scanner.next(); // Membaca nama barang.
                    System.out.print("Masukkan harga barang: ");
                    int addPrice = scanner.nextInt(); // Membaca harga barang sebagai int.
                    System.out.print("Masukkan jumlah barang: ");
                    int addQty = scanner.nextInt(); // Membaca jumlah barang.
                    cashier.addItem(addPrice, addCode, addName, addQty); // Menambahkan barang melalui metode addItem().
                    break;

                case 2:
                    // Menghapus barang dari daftar belanja berdasarkan kode barang.
                    System.out.print("Masukkan kode barang yang akan dihapus: ");
                    String removeCode = scanner.next(); // Membaca kode barang yang akan dihapus.
                    cashier.removeItem(removeCode); // Menghapus barang melalui metode removeItem().
                    break;

                case 3:
                    // Menampilkan total belanja dan meminta pembayaran dari pengguna.
                    System.out.println("----------------------------------");
                    cashier.displayTotal(); // Menampilkan daftar barang dan total harga.
                    System.out.print("Masukkan jumlah pembayaran: ");
                    int payment = scanner.nextInt(); // Membaca jumlah uang yang dibayarkan pengguna sebagai int.
                    cashier.processPayment(payment); // Menghitung kembalian melalui metode processPayment().
                    break;

                case 4:
                    // Mengakhiri program.
                    System.out.println("Terima kasih telah menggunakan sistem kasir kami!");
                    return; // Menghentikan program.

                default:
                    // Menangani input yang tidak valid.
                    System.out.println("Opsi tidak valid.");
            }
        }
    }
}

class Cashier {
    private ArrayList<Item> items; // Menyimpan daftar barang dalam ArrayList.

    public Cashier() {
        // Konstruktor menginisialisasi ArrayList untuk daftar barang.
        items = new ArrayList<>();
    }

    public void addItem(int price, String code, String name, int qty) {
        // Menambahkan barang ke daftar dengan detail harga, kode, nama, dan jumlah.
        items.add(new Item(code, name, price, qty));
        System.out.println("Barang ditambahkan.");
    }

    public void removeItem(String code) {
        // Menghapus barang dari daftar berdasarkan kode barang.
        items.removeIf(item -> item.getCode().equals(code));
        System.out.println("Barang dihapus.");
    }

    public void displayTotal() {
        // Menampilkan daftar barang, subtotal masing-masing barang, dan total belanja.
        int total = 0;
        System.out.println("Daftar Belanja:");
        for (Item item : items) {
            int subTotal = item.getSubTotal(); // Menghitung subtotal barang.
            total += subTotal; // Menambahkan subtotal ke total keseluruhan.
            System.out.println("Kode: " + item.getCode() + ", Nama: " + item.getName() +
                    ", Harga: " + item.getPrice() + ", Jumlah: " + item.getQty() +
                    ", SubTotal: " + subTotal); // Menampilkan detail setiap barang.
        }
        System.out.println("Total belanja: " + total); // Menampilkan total belanja.
    }

    public void processPayment(int payment) {
        // Menghitung dan menampilkan kembalian berdasarkan pembayaran.
        int total = items.stream().mapToInt(Item::getSubTotal).sum(); // Menghitung total semua barang.
        int change = payment - total; // Menghitung kembalian.
        System.out.println("Total bayar: " + total);
        System.out.println("Dibayar: " + payment);
        System.out.println("Kembalian: " + change); // Menampilkan kembalian.
    }
}

class Item {
    private int itemPrice; // Menyimpan harga barang sebagai int.
    private String itemName; // Menyimpan nama barang.
    private String itemCode; // Menyimpan kode barang.
    private int itemQty; // Menyimpan jumlah barang.

    public Item(String code, String name, int price, int qty) {
        // Konstruktor untuk menginisialisasi barang dengan kode, nama, harga, dan jumlah.
        this.itemCode = code;
        this.itemName = name;
        this.itemPrice = price;
        this.itemQty = qty;
    }

    public int getSubTotal() {
        // Menghitung subtotal barang (harga x jumlah) tanpa desimal.
        return itemPrice * itemQty;
    }

    public int getPrice() {
        return itemPrice; // Mengembalikan harga barang sebagai int.
    }

    public String getCode() {
        return itemCode; // Mengembalikan kode barang.
    }

    public String getName() {
        return itemName; // Mengembalikan nama barang.
    }

    public int getQty() {
        return itemQty; // Mengembalikan jumlah barang.
    }
}
